{"version":3,"file":"static/js/cast-page.27249945.chunk.js","mappings":"0NAIe,SAASA,EAAT,GAA0B,IAAXC,EAAU,EAAVA,QAC3B,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,MAAeC,MAAK,SAACC,GAClBJ,EAAQI,EAAKL,WAEhB,CAACF,IAEDE,IACG,wBACIA,EAAKM,KAAI,SAACC,GAAD,OACP,2BACK,gBACNC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,KACXC,MAAM,MACNC,OAAO,SAEH,wBAAKN,EAAMI,QACX,uCAAeJ,EAAMO,eARfP,EAAMQ","sources":["pages/Cast.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { fetchCredits } from 'services/themoviedbApi';\nimport { PropTypes } from 'prop-types';\n\nexport default function Cast({movieId}) {\n   const [cast, setCast] = useState(null);\n   useEffect(() => {\n      fetchCredits().then((data) => {\n         setCast(data.cast);\n      })\n   }, [movieId]);\n   return (\n      cast && (\n         <ul>\n            {cast.map((actor) => (\n               <li key={actor.id}>\n                    <img\n              src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n              alt={actor.name}\n              width=\"100\"\n              height=\"150\"\n            ></img>\n                  <h3>{actor.name}</h3>\n                  <p>Character: {actor.character}</p>\n               </li>\n      ))}\n         </ul>\n   )\n   )\n};\n\nCast.propTypes = {\n   movieId:PropTypes.string.isRequired,\n}"],"names":["Cast","movieId","useState","cast","setCast","useEffect","fetchCredits","then","data","map","actor","src","profile_path","alt","name","width","height","character","id"],"sourceRoot":""}
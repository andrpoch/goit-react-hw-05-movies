{"version":3,"file":"static/js/details-page.3867106d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetailsPage.module.css?6c65","pages/MovieDetailsPage.js","services/themoviedbApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetailsPage_wrapper__T2Yd8\",\"button\":\"MovieDetailsPage_button__TJ4lY\",\"card\":\"MovieDetailsPage_card__jVE7Z\",\"info\":\"MovieDetailsPage_info__MP-24\",\"title\":\"MovieDetailsPage_title__2nOHu\",\"more\":\"MovieDetailsPage_more__EhjXE\",\"link\":\"MovieDetailsPage_link__k0vIs\"};","import React,{ useState, useEffect, lazy, Suspense } from \"react\";\nimport { Route, NavLink, useParams, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\nimport { fetchDetails } from \"services/themoviedbApi\";\nimport Loader from \"components/Loader/Loader\";\nimport s from './MovieDetailsPage.module.css';\n\nconst Review = lazy(() => \n   import('./Reviews' /* webpackChunkName: 'reviews-page' */)\n);\nconst Cast = lazy(() => \n   import('./Cast' /* webpackChunkName: 'cast-page' */)\n);\nexport default function MovieDetailsPage() {\n   const history = useHistory();\n   const location = useLocation();\n   const { movieId } = useParams();\n   const [movie, setMovie] = useState(null);\n   const { url, path } = useRouteMatch();\n   useEffect(() => {\n      fetchDetails(movieId).then((movie) => {\n         setMovie(movie)\n      })\n   }, [movieId]);\n   const onScrollPage = () => {\n      setTimeout(() => {\n         window.scrollTo({\n            top: document.documentElement.clientHeight,\n            behavior: \"smooth\",\n         });\n      }, 500);\n   };\n   const goBack = () => {\n      history.push(location?.state?.from?.location ?? '/')\n   };\n   return (\n      <>\n         {movie && (\n            <>\n               <div className={s.wrapper}>\n                  <button className={s.button} onClick={goBack} type='button'>Go back</button>\n                  <div className={s.card}>\n                     <img\n                        src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n                        alt={movie.title}\n                     />\n                     <div className={s.info}>\n                        <h2 className={s.title}>{movie.title}</h2>\n                        <p>User score:{movie.vote_average}</p>\n                        <h3 className={s.title}>Overview</h3>\n                        <p>{movie.overview}</p>\n                        <h3 className={s.title}>Genres</h3>\n                        <p>{movie.genres.map((genre)=>genre.name).join(' , ')}</p>\n                     </div>\n                  </div>\n                  <div className={s.more}>\n                     <h3 className={s.title}>Additional information</h3>\n                     <ul >\n                        <li>\n                           <NavLink\n                              className={s.link}\n                              onClick={() => {\n                                 onScrollPage();\n                              }}\n                              to={{\n                                 pathname: `${url}/cast`,\n                                 state: {\n                                    from:location?.state?.from ?? '/'\n                                 },\n                              }}\n                              \n                           >Cast</NavLink>\n                        </li>\n                        <li>\n                           <NavLink\n                              className={s.link}\n                              onClick={() => {\n                                 onScrollPage();\n                              }}\n                              to={{\n                                 pathname: `${url}/reviews`,\n                                 state: {\n                                    from:location?.state?.from ?? '/'\n                                 },\n                              }}\n                              \n                           >Reviews</NavLink>\n                        </li>\n                     </ul>\n                  </div>\n               </div>\n               <Suspense fallback={<Loader />}>\n                  <Route path={`${path}/cast`}>\n                     <Cast movieId={movieId} />\n                  </Route>\n                  <Route path={`${path}/reviews`}>\n                     <Review movieId={movieId} />\n                  </Route>\n                  </Suspense>\n            </>\n         )}\n      </>\n   )\n};\n\n\n\n","const API_KEY = 'f93b01b73c44b40ba53413c6e5601742';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchUrl(url = '', config = {}) {\n   const r = await fetch(url, config);\n   return r.ok ? await r.json() : Promise.reject(new Error('Nothing found'));\n};\n\nexport function fetchTrending () {\n   return fetchUrl(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n   );\n};\nexport function fetchSearch (searchQuery) {\n   return fetchUrl(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`\n   );\n};\nexport function fetchDetails (movieId) {\n     return fetchUrl(\n        `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n   );\n};\nexport function fetchCredits (movieId) {\n     return fetchUrl(\n        `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n   );\n};\nexport function fetchReviews(movieId) {\n     return fetchUrl(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n   );\n};\n\n\n"],"names":["Review","lazy","Cast","MovieDetailsPage","history","useHistory","location","useLocation","movieId","useParams","useState","movie","setMovie","useRouteMatch","url","path","useEffect","fetchDetails","then","onScrollPage","setTimeout","window","scrollTo","top","document","documentElement","clientHeight","behavior","className","s","onClick","push","state","from","type","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","to","pathname","Suspense","fallback","Loader","API_KEY","BASE_URL","fetchUrl","config","fetch","r","ok","json","Promise","reject","Error","fetchTrending","fetchSearch","searchQuery","fetchCredits","fetchReviews"],"sourceRoot":""}
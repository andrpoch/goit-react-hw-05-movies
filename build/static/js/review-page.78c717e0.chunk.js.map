{"version":3,"file":"static/js/review-page.78c717e0.chunk.js","mappings":"2NAIe,SAASA,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QAC9B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACPC,EAAAA,EAAAA,MAAeC,MAAK,SAACC,GAClBJ,EAAWI,EAAKC,cAEnB,CAACR,KAED,8BACuB,IAAnBE,EAAQO,QACN,+BACG,wBACIP,EAAQQ,KAAI,SAACC,GAAD,OACV,2BACG,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFLF,EAAOG,YAQtB","sources":["pages/Reviews.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchReviews } from 'services/themoviedbApi';\nimport PropTypes from 'prop-types';\n\nexport default function Reviews({movieId}) {\n   const [reviews, setReviews] = useState([]);\n   useEffect(() => {\n      fetchReviews().then((data) => {\n         setReviews(data.results)\n      })\n   }, [movieId]);\n   return (\n      <>\n         {reviews.length === 0 ? (\n            <>\n               <ul>\n                  {reviews.map((review) => (\n                     <li key={review.id}>\n                        <h4>{review.author}</h4>\n                        <p>{review.content}</p>\n                     </li>\n                  ))}\n               </ul>\n            </>     \n         ) : (\n               <p>Nothing found</p>\n      )}\n      </>\n   )\n   };\n\nReviews.propTypes = {\n   movieId: PropTypes.string.isRequired,\n};"],"names":["Reviews","movieId","useState","reviews","setReviews","useEffect","fetchReviews","then","data","results","length","map","review","author","content","id"],"sourceRoot":""}